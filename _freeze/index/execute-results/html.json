{
  "hash": "23d97c445484cee6d42e96e32304eb6c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Financial Report on the Clorox Company (CLX)\nsubtitle: A Project for the Computational Finance Course\n# title-block-banner: true\nexecute:\n  echo: true\nauthors:\n  - name: Andrey Malyukov\n    affiliation: Sami Shamoon College of Engineering\n    roles: writing\n    corresponding: true\n    email: ds-an@tuta.io\n  - name: Roza Bass\n    affiliation: Sami Shamoon College of Engineering\n    roles: writing\n    corresponding: false\nbibliography: references.bib\nkeywords:\n  - Financial Report\n  - Feduciary\n  - Course Project\nnumber-section: true\nabstract: |\n  In this Project for the Computational Finance course led by prof. Alan Solomon at the Sami Shamoon College of Engineering, we aim to demonstrate basic understanding of the course material by writing a guide for the feduciary on how to provide guidance for investors using the tools of computational finance.\n---\n\n{{< embed notebooks/intro.qmd >}}\n\n\n\n\n\n\n\n\n\n\n## Sector Analysis\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyquant)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyquant packages ─────────────────────── tidyquant 1.0.10 ──\n✔ PerformanceAnalytics 2.0.8      ✔ TTR                  0.24.4\n✔ quantmod             0.4.26     ✔ xts                  0.14.1\n── Conflicts ────────────────────────────────────────── tidyquant_conflicts() ──\n✖ zoo::as.Date()                 masks base::as.Date()\n✖ zoo::as.Date.numeric()         masks base::as.Date.numeric()\n✖ PerformanceAnalytics::legend() masks graphics::legend()\n✖ quantmod::summary()            masks base::summary()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n######################### Warning from 'xts' package ##########################\n#                                                                             #\n# The dplyr lag() function breaks how base R's lag() function is supposed to  #\n# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n# source() into this session won't work correctly.                            #\n#                                                                             #\n# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n# dplyr from breaking base R's lag() function.                                #\n#                                                                             #\n# Code in packages is not affected. It's protected by R's namespace mechanism #\n# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#                                                                             #\n###############################################################################\n\nAttaching package: 'dplyr'\n\nThe following objects are masked from 'package:xts':\n\n    first, last\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\ntickers <- c(\"CLX\", \"CL\", \"PG\", \"CHD\", \"KMB\")\n\nprices <- tq_get(tickers,\n               from = \"2024-01-01\",\n               to = \"2025-02-01\",\n               get = \"stock.prices\")\n\nprices |>\n  ggplot(aes(x = date, y = adjusted, color = symbol)) +\n  geom_line() +\n  labs(subtitle = \"Simple stock price comparison for the last year against major competitors\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n\n\n<!-- https://alphaarchitect.com/2020/01/visualization-sector-trends-with-r-code/ -->\n\n\n\n\n\n\n{{< embed notebooks/sector.qmd >}}\n\n\n\n\n\n\n\n\n\n\n## Personality of the Company\n\n\n\n\n\n{{< embed notebooks/personality.qmd >}}\n\n\n\n\n\n\n\n\n\n\n## Fundamental Analysis\n\n\n\n\n\n{{< embed notebooks/fundamentals.qmd >}}\n\n\n\n\n\n\n\n\n\n\n## Technical Analysis\n\n\n\n\n\n{{< embed notebooks/technical.qmd >}}\n\n\n\n\n\n\n\n\n\n\n## Company Performance 2019-2024\n\n\n\n\n\n{{< embed notebooks/2019-2024.qmd >}}\n\n\n\n\n\n\n\n\n\n\n## Forecasting\n\n\n\n\n\n{{< embed notebooks/forecasting.qmd >}}\n\n\n\n\n\n\n\n\n\n\n## Summary\n\n\n\n\n\n{{< embed notebooks/summary.qmd >}}\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}