{
  "hash": "bfb88ce0a2d6851925d8dcadcd0c0139",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.callout-note} \nIn this section we provide some historic data and rudimentary analysis of the company during the 2019-2024 period.\n:::\n\n### Historical Analysis of the Company \n\nAs we've identified in the previous sections, major events for the company in this peroid included the adoption of IGNITE strategy and recent cyberattack. Another major event was, of course, the global pandemic.\n\nIn terms of the corporation's life cycle, Clorox is definitely in the **Maturity** phase: it is relatively stable, resilient to shocks and demonstrates confidence during the recovery from such shocks. \n\nGetting historical data is very easy with R language - you just provide the time period you are interested in, and get it same as always.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| echo: true\nlibrary(tidyquant)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyquant packages ─────────────────────── tidyquant 1.0.10 ──\n✔ PerformanceAnalytics 2.0.8      ✔ TTR                  0.24.4\n✔ quantmod             0.4.26     ✔ xts                  0.14.1\n── Conflicts ────────────────────────────────────────── tidyquant_conflicts() ──\n✖ zoo::as.Date()                 masks base::as.Date()\n✖ zoo::as.Date.numeric()         masks base::as.Date.numeric()\n✖ PerformanceAnalytics::legend() masks graphics::legend()\n✖ quantmod::summary()            masks base::summary()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n#| echo: true\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n######################### Warning from 'xts' package ##########################\n#                                                                             #\n# The dplyr lag() function breaks how base R's lag() function is supposed to  #\n# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n# source() into this session won't work correctly.                            #\n#                                                                             #\n# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n# dplyr from breaking base R's lag() function.                                #\n#                                                                             #\n# Code in packages is not affected. It's protected by R's namespace mechanism #\n# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#                                                                             #\n###############################################################################\n\nAttaching package: 'dplyr'\n\nThe following objects are masked from 'package:xts':\n\n    first, last\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\n#| echo: true\ntickers <- c(\"CLX\", \"CL\", \"PG\", \"CHD\", \"KMB\")\n\nprices <- tq_get(tickers,\n               from = \"2019-01-01\",\n               to = \"2024-12-31\",\n               get = \"stock.prices\")\n\nprices |>\n  ggplot(aes(x = date, y = adjusted, color = symbol)) +\n  geom_line() +\n  labs(subtitle = \"Simple stock price comparison for the last 5 years against major competitors\")\n```\n\n::: {.cell-output-display}\n![](2019-2024_files/figure-ipynb/unnamed-chunk-1-1.png)\n:::\n:::\n\n\n\nFundamental analysis based on revenue data for the last five-year period can be found in the \"Fundamental Analysis\" section.\n\n---\n\nSites like [https://stockanalysis.com](https://stockanalysis.com) provide all kinds of historic data for the last five-year period in nice tables. All of it can be scraped - we'll scrape and reproduce some of it here.\n\n| Fiscal Year                             | Current              | FY 2024              | FY 2023              | FY 2022              | FY 2021              | FY 2020              |\n|-----------------------------------------|----------------------|----------------------|----------------------|----------------------|----------------------|----------------------|\n| Period Ending                           | Feb '25 Feb 14, 2025 | Jun '24 Jun 30, 2024 | Jun '23 Jun 30, 2023 | Jun '22 Jun 30, 2022 | Jun '21 Jun 30, 2021 | Jun '20 Jun 30, 2020 |\n| Market Capitalization                   | 18,222               | 16,948               | 19,661               | 17,352               | 22,376               | 27,626               |\n| Market Cap Growth                       | 13.64%               | -13.80%              | 13.31%               | -22.45%              | -19.00%              | 41.66%               |\n| Enterprise Value                        | 21,024               | 19,913               | 22,613               | 20,467               | 25,241               | 30,412               |\n| Last Close Price                        | 147.92               | 133.25               | 150.09               | 128.86               | 159.95               | 190.95               |\n| PE Ratio                                | 40.32                | 60.53                | 131.95               | 37.56                | 31.52                | 29.42                |\n| Forward PE                              | 20.81                | 21.90                | 29.44                | 28.13                | 25.00                | 30.85                |\n| PS Ratio                                | 2.56                 | 2.39                 | 2.66                 | 2.44                 | 3.05                 | 4.11                 |\n| PB Ratio                                | 166.14               | 34.45                | 50.67                | 23.80                | 37.80                | 30.43                |\n\n: CLX's Historical Financial Ratios, source: @CloroxCompanyCLXc {.striped .hover}\n\n### Conclusion\n\nWe can use publicly available data, as well as the R language to get historical financial data and ratios. The analysis shows strong performance during the last five-year period.\n",
    "supporting": [
      "2019-2024_files/figure-ipynb"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}