{
  "hash": "d1306f504fcab9324d4976346d4a55a9",
  "result": {
    "engine": "knitr",
    "markdown": "<!--\nSee \"technical overview example\" in notes. \nUse The Relative Strength Index (RSI).\nOverbought/oversold analysis. \nBeta value for 5 years. Open, close, range, average volume, put/call ratios.\nReturn for ETF vs return for stock over time.\nStock correlation calculator?\nMaybe just copy from here: https://mlozanoqf.github.io/tutorial_pmf/#technical-analysis.\n-->\n\n::: {.callout-note}\nTechnical analysis in this section follows the wonderful tutorial provided here: [@FinancialModelingb]\n:::\n\n#### **Basic Technical Analysis of the Clorox Company**\n\nWe'll start with providing a simple plot of stock price movement.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyquant)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyquant packages ─────────────────────── tidyquant 1.0.10 ──\n✔ PerformanceAnalytics 2.0.8      ✔ TTR                  0.24.4\n✔ quantmod             0.4.26     ✔ xts                  0.14.1\n── Conflicts ────────────────────────────────────────── tidyquant_conflicts() ──\n✖ zoo::as.Date()                 masks base::as.Date()\n✖ zoo::as.Date.numeric()         masks base::as.Date.numeric()\n✖ PerformanceAnalytics::legend() masks graphics::legend()\n✖ quantmod::summary()            masks base::summary()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n######################### Warning from 'xts' package ##########################\n#                                                                             #\n# The dplyr lag() function breaks how base R's lag() function is supposed to  #\n# work, which breaks lag(my_xts). Calls to lag(my_xts) that you type or       #\n# source() into this session won't work correctly.                            #\n#                                                                             #\n# Use stats::lag() to make sure you're not using dplyr::lag(), or you can add #\n# conflictRules('dplyr', exclude = 'lag') to your .Rprofile to stop           #\n# dplyr from breaking base R's lag() function.                                #\n#                                                                             #\n# Code in packages is not affected. It's protected by R's namespace mechanism #\n# Set `options(xts.warn_dplyr_breaks_lag = FALSE)` to suppress this warning.  #\n#                                                                             #\n###############################################################################\n\nAttaching package: 'dplyr'\n\nThe following objects are masked from 'package:xts':\n\n    first, last\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nCLX <- tq_get(\"CLX\", get = \"stock.prices\", from = \"2024-01-01\", \n               to = \"2025-02-01\")\n\nCLX |>\n    ggplot(aes(x = date, y = close)) + geom_line() +\n    labs(y = \"Closing price\", x = \"\", title = \"Simple plot representing closing prices of the CLX stock for the past year\") +\n    theme_tq()\n```\n\n::: {.cell-output-display}\n![](technical_files/figure-ipynb/unnamed-chunk-1-1.png)\n:::\n:::\n\n\n\n\n\n\n\nTo identify basic trend in this movement, we then chart the **Simple Moving Average**.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyquant)\nlibrary(ggplot2)\nlibrary(dplyr)\nCLX <- tq_get(\"CLX\", get = \"stock.prices\", from = \"2024-01-01\", \n               to = \"2025-02-01\")\nCLX |>\n  ggplot(aes(x = date, y = close)) +\n    geom_line()  +\n    geom_ma(ma_fun = SMA, n = 25, linetype = 1, size = 1.25) +\n    labs(y = \"Closing Price\", x = \"\") + \n    theme_tq()\n```\n\n::: {.cell-output-display}\n![](technical_files/figure-ipynb/unnamed-chunk-2-1.png)\n:::\n:::\n\n\n\n\n\n\n\nBy playing with the \"n\" value - the average of the last n-day stock prices - we produced a line that closely resembles the price line. Since the SMA line crosses the price line from top to bottom, we're supposed to anticipate a drop in the stock price. \n\n**The Bollinger Bands** is another useful tool of technical analysis. These are \"envelopes plotted at a standard deviation level above and below a simple moving average of the price\" [@FinancialModelingb]. They supposed to show the volatility of a price of the stock and the size of expected change of the price in the future.\n\nLet's demonstrate. \n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyquant)\nlibrary(ggplot2)\nlibrary(dplyr)\nCLX <- tq_get(\"CLX\", get = \"stock.prices\", from = \"2024-01-01\", \n               to = \"2025-02-01\")\nCLX |>\n  ggplot(aes(x = date, y = close, open = open,\n              high = high, low = low, close = close)) +\n    geom_line() +\n    geom_bbands(ma_fun = SMA, sd = 2, n = 25,\n                linetype = 2, size = 0.5, alpha = 0.2,\n                fill        = palette_light()[[1]],\n                color_bands = palette_light()[[1]],\n                color_ma    = palette_light()[[2]]) +\n    labs(y = \"Closing Price\", x = \"\") +\n    theme_tq()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](technical_files/figure-ipynb/unnamed-chunk-3-1.png)\n:::\n:::\n\n\n\n\n\n\n\nAnd finally let's look at such charts for major competitors to get the feel of the market.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyquant)\nlibrary(ggplot2)\nlibrary(dplyr)\nprices <- tq_get(c(\"CLX\", \"CL\", \"PG\", \"CHD\"), get = \"stock.prices\", from = \"2024-01-01\", \n  to = \"2025-02-01\")\nprices |>\n  ggplot(aes(x = date, y = close, open = open,\n              high = high, low = low, close = close)) +\n    geom_line() +\n    geom_bbands(ma_fun = SMA, sd = 2, n = 25,\n                linetype = 2, size = 0.5, alpha = 0.2,\n                fill        = palette_light()[[1]],\n                color_bands = palette_light()[[1]],\n                color_ma    = palette_light()[[2]]) +\n    facet_wrap(~ symbol, ncol = 2, scales = \"free_y\") +\n    theme_tq()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: The following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: open.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](technical_files/figure-ipynb/unnamed-chunk-4-1.png)\n:::\n:::\n\n\n\n\n\n\n\nAs we can see, the volatility of the stock prices shouldn't be that great in the near future. Since technical analysis is best-suited for short-term trading, near future is all we can advise or client on based on such analysis.\n\n### Conclusion\n\nWe can use \"tidyquant\" R language package along with other packages for producing charts to perform basic technical analysis of stock price. The analysis predicts stable performance in the short term.\n",
    "supporting": [
      "technical_files/figure-ipynb"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}